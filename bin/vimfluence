#!/usr/bin/env ruby

require 'rubygems'
require 'etc'
require 'tempfile'
require 'xmlrpc/client'

SPACE = ARGV[0]
PAGE = ARGV[1]
URL = ENV["WIKI_URL"]
WIKI_USER = ENV["WIKI_USER"] || Etc.getlogin
WIKI_EXTENSION = ENV["WIKI_EXTENSION"] || 'confluencewiki'
WIKI_PASS = ENV["WIKI_PASS"] || `security find-generic-password -g -w -s #{ENV["WIKI_PASS_KEYCHAIN_KEY"]}`.strip
EDITOR = ENV["EDITOR"] || "vim"
client = XMLRPC::Client.new2("#{URL}/rpc/xmlrpc")
client.http_header_extra = {"Accept-Encoding" => "identity"}
client = client.proxy("confluence2")
token = client.login(WIKI_USER, WIKI_PASS)
page = client.getPage(token, SPACE, PAGE)
file = Tempfile.new(["#{SPACE}-#{PAGE}", ".#{WIKI_EXTENSION}"])
old_content = page["content"]
file.write(old_content)
file.flush
system("#{EDITOR} '#{file.path}'")
new_content = File.read(file.path)
unless old_content.eql? new_content
  page["content"] = new_content
  begin
    client.storePage(token, page)
  rescue => e
    filename = "output#{Time.now.to_i}.confluencewiki"
    File.open(filename, "w") do |f|
      f.write(new_content)
    end
    puts "failure saving page..., content saved to: #{filename}"
  end
  `open #{page["url"]}`
end
client.logout(token)
file.close!
